<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Velodyne Mount -->
  <xacro:macro name="anymal_velodyne_mount" params="name:=velodyne_mount parent:=base mount *origin">

    <!-- base to mount joint -->
    <joint name="${parent}_to_${name}" type="fixed">
      <parent link="${parent}"/>
      <child link="${name}"/>
      <xacro:insert_block name="origin"/>
    </joint>

    <!-- Velodyne mount link -->
    <xacro:if value="${mount in ['front']}">
      <link name="${name}">
        <xacro:if value="$(arg mesh)">
          <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <mesh filename="package://anymal_description/urdf/modules/velodyne/anymal_velodyne_mount.dae" scale=".001 .001 .001"/>
            </geometry>
          </visual>
          <material name="anymal_material"/>
        </xacro:if>
        <xacro:unless value="$(arg mesh)">
          <visual>
            <origin xyz="-0.015 0.0 -0.025" rpy="0.0 0.0 0.0"/>
            <geometry>
              <box size="0.09 0.215 0.05"/>
            </geometry>
            <material name="anymal_material"/>
          </visual>
        </xacro:unless>
        <collision>
          <origin xyz="-0.015 0.0 -0.025" rpy="0.0 0.0 0.0"/>
          <geometry>
            <box size="0.09 0.215 0.05"/>
          </geometry>
          <material name="anymal_material"/>
        </collision>
        <inertial>
          <!-- Values from CAD -->
          <origin xyz="0.078608890381 0.000999966453 0.010465821956" rpy="0.0 0.0 0.0"/>
          <mass value="0.411254098"/>
          <inertia ixx="0.001383141132159" ixy="-0.000000000071111" ixz="-0.000011007223061" iyy="0.000685526973337" iyz="-0.000000000216688" izz="0.001999724408014"/>
        </inertial>
      </link>
    </xacro:if>
    <xacro:if value="${mount in ['cage']}">
      <link name="${name}">
        <xacro:if value="$(arg mesh)">
          <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <mesh filename="package://anymal_description/urdf/modules/velodyne/anymal_velodyne_mount_cage.dae" scale=".001 .001 .001"/>
            </geometry>
          </visual>
          <material name="anymal_material"/>
        </xacro:if>
        <xacro:unless value="$(arg mesh)">
          <visual>
            <origin xyz="-0.015 0.0 -0.025" rpy="0.0 0.0 0.0"/>
            <geometry>
              <box size="0.09 0.215 0.05"/>
            </geometry>
            <material name="anymal_material"/>
          </visual>
        </xacro:unless>
        <collision>
          <origin xyz="-0.015 0.0 -0.025" rpy="0.0 0.0 0.0"/>
          <geometry>
            <box size="0.09 0.215 0.05"/>
          </geometry>
          <material name="anymal_material"/>
        </collision>
        <inertial>
          <!-- Values from CAD -->
          <origin xyz="-0.003470719564
                       -0.000437953244
                        0.009296175974"
                  rpy="0.0 0.0 0.0"/>
          <mass value="0.468309149"/>
          <inertia ixx= "0.002023718043706"
                   ixy= "0.000007237377195"
                   ixz= "0.000088125050002"
                   iyy= "0.001843825349439"
                   iyz="-0.000005839762850"
                   izz= "0.002035845574943"/>
        </inertial>
      </link>
    </xacro:if>
  </xacro:macro>

  <!-- Velodyne -->
  <xacro:macro name="VLP-16-lite" params="*origin *velodyne_calibration_tf parent:=base_link name:=velodyne topic:=/velodyne/point_cloud hz:=10 lasers:=16 samples:=1875 collision_range:=0.3 min_range:=0.9 max_range:=130.0 noise:=0.008 min_angle:=-${PI} max_angle:=${PI}">

    <joint name="${parent}_to_${name}_axis_aligned" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${name}_axis_aligned"/>
    </joint>

    <link name="${name}_axis_aligned">
      <!--inertial>
        <mass value="0.590"/>
        <origin xyz="0 0 0.03585"/>
        <inertia ixx="${(0.59 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" ixy="0" ixz="0"
          iyy="${(0.59 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" iyz="0"
          izz="${0.5 * 0.59 * (0.0516*0.0516)}"/>
      </inertial-->
      <inertial>
        <mass value="0.589004276"/>
        <origin xyz="-0.000393930511
                      0.000465473191
                     -0.002216548208"/>
        <inertia ixx= "0.000646625073623"
                 ixy="-0.000010230485148"
                 ixz= "0.000006639631820"
                 iyy= "0.000643015385131"
                 iyz="-0.000007835650222"
                 izz= "0.000768918200999"/>
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 -0.0377"/>
        <geometry>
          <mesh filename="package://velodyne_description/meshes/VLP16_base_1.dae" />
        </geometry>
      </visual>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 -0.0377"/>
        <geometry>
          <mesh filename="package://velodyne_description/meshes/VLP16_base_2.dae" />
        </geometry>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0.03585"/>
        <geometry>
          <cylinder radius="0.0516" length="0.0717"/>
        </geometry>
      </collision>
    </link>

    <joint name="${name}_axis_aligned_to_velodyne" type="fixed" >
      <xacro:insert_block name="velodyne_calibration_tf" />
      <parent link="${name}_axis_aligned" />
      <child link="${name}"/>
    </joint>

    <link name="${name}">
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
      </inertial>
      <visual>
        <origin xyz="0 0 -0.0377" />
        <geometry>
          <mesh filename="package://velodyne_description/meshes/VLP16_scan.dae" />
        </geometry>
      </visual>
    </link>

    <!-- Gazebo requires the velodyne_gazebo_plugins package -->
    <gazebo reference="${name}">
      <sensor type="ray" name="${name}-VLP16">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>${hz}</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>${samples}</samples>
              <resolution>1</resolution>
              <min_angle>${min_angle}</min_angle>
              <max_angle>${max_angle}</max_angle>
            </horizontal>
            <vertical>
              <samples>${lasers}</samples>
              <resolution>1</resolution>
              <min_angle>-${15.0*PI/180.0}</min_angle>
              <max_angle> ${15.0*PI/180.0}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${collision_range}</min>
            <max>${max_range+1}</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
          <topicName>${topic}</topicName>
          <frameName>${name}</frameName>
          <min_range>${min_range}</min_range>
          <max_range>${max_range}</max_range>
          <gaussianNoise>${noise}</gaussianNoise>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>
</robot>
